# SPDX-FileCopyrightText: 2006-2024 Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2024 Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC-BY-4.0

name: 'Lint'
description: 'Run clang-format and cmake-format'
inputs:
  clang_format:
    description: "clang-format version to use."
    required: false
    default: 15
  token:
    description: "Personal Access Token (PAT)."
    required: true
  gpg_key:
    description: "Private GPG key for signing commits."
    required: true
  gpg_passphrase:
    description: "Passphrase for GPG key."
    required: true
runs:
  using: 'composite'
  steps:
    - name: Add label
      env:
          GITHUB_TOKEN: ${{ inputs.token }}
          PR_URL: ${{ github.event.pull_request.html_url }}
      shell: bash
      run: gh pr edit $PR_URL --add-label "lint"

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: "refs/pull/${{ github.event.number }}/merge"
        submodules: false
        token: ${{ inputs.token }}

    - name: Get changed files
      id: changed_files
      shell: bash
      run: |
        CPP_LIST=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} | \
        { grep -v -E "(lib/|contrib/|submodules/)" || test $? = 1; } | \
        { grep -E "(\.cpp|\.hpp)$" || test $? = 1; } | xargs)
        echo "cpp_list=$CPP_LIST" >> $GITHUB_OUTPUT

        CMAKE_LIST=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} | \
        { grep -v -E "(lib/|contrib/|submodules/)" || test $? = 1; } | \
        { grep -E "(\.cmake|CMakeLists.txt)$" || test $? = 1; } | xargs)
        echo "cmake_list=$CMAKE_LIST" >> $GITHUB_OUTPUT

    - name: Switch to fork
      shell: bash
      run: |
        git remote add fork ${{ github.event.pull_request.head.repo.html_url }}
        git fetch fork ${{ github.event.pull_request.head.ref }}
        git checkout --force --track fork/${{ github.event.pull_request.head.ref }}

    - name: Run clang-format
      if: ${{ steps.changed_files.outputs.cpp_list }}
      uses: eseiler/clang-format-lint-action@master
      with:
        source: ${{ steps.changed_files.outputs.cpp_list }}
        clangFormatVersion: ${{ inputs.clang_format }}
        inplace: True

    - name: Run cmake-format
      if: ${{ steps.changed_files.outputs.cmake_list }}
      uses: PuneetMatharu/cmake-format-lint-action@v1.0.5
      with:
        args: --config-files .cmake-format.yaml --in-place

    - name: Check git status
      id: git_status
      shell: bash
      run: |
        if [[ -z $(git status -uno --porcelain) ]]; then
          echo "commit_required=" >> $GITHUB_OUTPUT
        else
          echo "commit_required=true" >> $GITHUB_OUTPUT
        fi

    - name: Import GPG key
      if: ${{ steps.git_status.outputs.commit_required }}
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ inputs.gpg_key }}
        passphrase: ${{ inputs.gpg_passphrase }}
        git_user_signingkey: true
        git_commit_gpgsign: true

    - name: Commit changes
      if: ${{ steps.git_status.outputs.commit_required }}
      shell: bash
      run: |
        git config user.name "seqan-actions[bot]"
        git config user.email "seqan-actions@users.noreply.github.com"
        git add .
        git commit -m '[MISC] automatic linting'
        git push fork ${{ github.event.pull_request.head.ref }}

    - name: Remove label
      if: ${{ !steps.git_status.outputs.commit_required }}
      env:
          GITHUB_TOKEN: ${{ inputs.token }}
          PR_URL: ${{ github.event.pull_request.html_url }}
      shell: bash
      run: gh pr edit $PR_URL --remove-label "lint"
