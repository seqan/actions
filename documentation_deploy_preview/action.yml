# SPDX-FileCopyrightText: 2006-2025 Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2025 Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC-BY-4.0

name: 'Deploy Preview'
description: 'Deploys a preview.'
inputs:
  deploy_host:
    description: "The host to deploy to."
    type: string
    required: true
  deploy_base_path:
    description: "The host path to deploy to. Proper directory structure will be created."
    type: string
    required: true
  deploy_user:
    description: "The user name for connecting to the host."
    type: string
    required: true
  deploy_ssh_key:
    description: "The private SSH key for connecting to the host."
    type: string
    required: true
  source_path_user_doc:
    description: "The path to the user documentation. This is the directory containing the HTML files."
    type: string
    required: true
  source_path_developer_doc:
    description: "The path to the developer documentation. This is the directory containing the HTML files."
    type: string
    required: false
  token:
    description: "The access token to use for the comment."
    type: string
    required: true
runs:
  using: 'composite'
  steps:
    - name: Error if not a pull request
      if: github.event_name != 'pull_request' && github.event_name != 'pull_request_target'
      shell: bash
      run: echo "::error title=Error::This action can only be run on pull requests."; exit 1

    - name: Input Check
      shell: bash
      run: |
        if [[ "${{ inputs.deploy_base_path }}" != $(readlink -m "${{ inputs.deploy_base_path }}") ]]; then
            echo "::error title=Error::deploy_base_path must be an absolute path and not end in '/'."
            exit 1
        fi

    - name: Package Preview Dual Documentation
      if: ${{ inputs.source_path_developer_doc != '' }}
      shell: bash
      run: |
        mkdir -p preview/{user,developer}
        cp -r ${{ inputs.source_path_user_doc }}/* preview/user/
        cp -r ${{ inputs.source_path_developer_doc }}/* preview/developer/
        cp ${GITHUB_ACTION_PATH}/index.html preview/
        cp ${GITHUB_ACTION_PATH}/seqan_logo.svg preview/
        cp ${GITHUB_ACTION_PATH}/style.css preview/

    - name: Package Preview Single Documentation
      if: ${{ inputs.source_path_developer_doc == '' }}
      shell: bash
      run: |
        mkdir -p preview
        cp -r ${{ inputs.source_path_user_doc }}/* preview/

    - name: Deploy Preview
      uses: burnett01/rsync-deployments@7.1.0
      with:
        switches: --recursive --delete --timeout=60 --omit-dir-times --mkpath
        path: 'preview/'
        remote_path: '${{ inputs.deploy_base_path }}/${{ github.event.pull_request.base.repo.full_name }}/${{ github.event.pull_request.number }}'
        remote_host: ${{ inputs.deploy_host }}
        remote_user: ${{ inputs.deploy_user }}
        remote_key: ${{ inputs.deploy_ssh_key }}

    - name: Find Comment
      uses: peter-evans/find-comment@v3
      id: find_comment
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body-includes: Documentation preview available

    - name: Create
      if: steps.find_comment.outputs.comment-id == ''
      uses: peter-evans/create-or-update-comment@v5
      with:
        token: ${{ inputs.token }}
        issue-number: ${{ github.event.pull_request.number }}
        body: Documentation preview available at https://docs.seqan.de/preview/${{ github.event.pull_request.base.repo.full_name }}/${{ github.event.pull_request.number }}
